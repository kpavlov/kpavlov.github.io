<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Devops on The Culture of Code</title>
    <link>https://konstantinpavlov.net/categories/devops/index.xml</link>
    <description>Recent content in Devops on The Culture of Code</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <atom:link href="https://konstantinpavlov.net/categories/devops/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Deploying Private Docker Registry Behind Cloudflaire</title>
      <link>https://konstantinpavlov.net/blog/2016/09/14/deploying-private-docker-registry-behind-cloudflaire/</link>
      <pubDate>Wed, 14 Sep 2016 10:15:51 +0000</pubDate>
      
      <guid>https://konstantinpavlov.net/blog/2016/09/14/deploying-private-docker-registry-behind-cloudflaire/</guid>
      <description>&lt;p&gt;This is a short instruction how to deploy private docker registry on private cloud virtual servers behind &lt;a href=&#34;https://www.cloudflare.com&#34; target=&#34;_blank&#34;&gt;Cloudflaire&lt;/a&gt; proxy.

Suppose, we have two virtual servers on private cloud:&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Installing Ansible 2.1.1 on Debian 8 (Jessie)</title>
      <link>https://konstantinpavlov.net/blog/2016/09/09/installing-ansible-2.1.1-on-debian-8-jessie/</link>
      <pubDate>Fri, 09 Sep 2016 10:12:48 +0000</pubDate>
      
      <guid>https://konstantinpavlov.net/blog/2016/09/09/installing-ansible-2.1.1-on-debian-8-jessie/</guid>
      <description>&lt;p&gt;Recently I faced some dependency issues trying to install &lt;a href=&#34;https://ansible.com&#34; target=&#34;_blank&#34;&gt;Ansible 2&lt;/a&gt; on Debian 8 (Jessie).
Googling a bit I found a solution which was a basically to upgrade or install missing dependencies.
Following script automates the installation procedure:
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>CI Setup Tips</title>
      <link>https://konstantinpavlov.net/blog/2016/07/17/ci-setup-tips/</link>
      <pubDate>Sun, 17 Jul 2016 17:00:00 +0000</pubDate>
      
      <guid>https://konstantinpavlov.net/blog/2016/07/17/ci-setup-tips/</guid>
      <description>You may find following tips useful when setting up continuous integration infrastructure.
Security Use VPN or reverse proxy provider like cloudflare.com to secure your CI infrastructure. Never make your real IPs publicly available, otherwise you increase a risk of being hacked.
Jenkins Use master node and build agents. Master node acts only as web console. Nodes are for compiling and testing.
Notifications If you&amp;rsquo;re using google apps for domain, you may use Google&amp;rsquo;s restricted SMTP server to send notifications.</description>
    </item>
    
    <item>
      <title>Developing in &#34;Dirty Trunk&#34;</title>
      <link>https://konstantinpavlov.net/blog/2016/03/04/developing-in-dirty-trunk/</link>
      <pubDate>Fri, 04 Mar 2016 22:26:24 +0000</pubDate>
      
      <guid>https://konstantinpavlov.net/blog/2016/03/04/developing-in-dirty-trunk/</guid>
      <description>&lt;p&gt;I&amp;rsquo;m going to start a series of posts covering different aspects of DevOps.&lt;/p&gt;

&lt;p&gt;Let&amp;rsquo;s start today with branching strategy called &lt;em&gt;&amp;laquo;dirty trunk&amp;raquo;&lt;/em&gt;. Actually, this is an attempt to avoid branching at all.

The idea is that:&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Chef for Managing Small Cloud Infrastructure</title>
      <link>https://konstantinpavlov.net/blog/2014/09/07/chef-for-managing-small-cloud-infrastructure/</link>
      <pubDate>Sun, 07 Sep 2014 11:37:12 +0000</pubDate>
      
      <guid>https://konstantinpavlov.net/blog/2014/09/07/chef-for-managing-small-cloud-infrastructure/</guid>
      <description>&lt;p&gt;I need to manage a small &lt;a href=&#34;https://www.digitalocean.com/?refcode=3560cbe19651&#34; target=&#34;_blank&#34;&gt;cloud server infrastructure&lt;/a&gt;.
I have no intention to edit configs by hand all the time, nor write deployment scripts myself.&lt;/p&gt;

&lt;p&gt;Instead, I&amp;rsquo;ll give a chance to &lt;a href=&#34;https://docs.getchef.com/chef_solo.html&#34; target=&#34;_blank&#34;&gt;Chef-Solo&lt;/a&gt; &amp;ndash; a smaller sibling of well-known configuration management tool Chef.
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Jolokia: HTTP/JSON bridge for JMX</title>
      <link>https://konstantinpavlov.net/blog/2014/06/09/jolokia-http/json-bridge-for-jmx/</link>
      <pubDate>Mon, 09 Jun 2014 13:17:37 +0300</pubDate>
      
      <guid>https://konstantinpavlov.net/blog/2014/06/09/jolokia-http/json-bridge-for-jmx/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://upload.wikimedia.org/wikipedia/commons/thumb/6/69/BhutJolokia09_Asit.jpg/640px-BhutJolokia09_Asit.jpg&#34; alt=&#34;Jolokia Logo&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Very often there is a need to monitor the Java application server.
For example, external monitoring tool, like Nagious/Zenoss/Zabbix needs to get some metrics, like heap memory usage or thread count.&lt;/p&gt;

&lt;p&gt;Usual way to get that metrics is to setup access to application server via JMX.&lt;/p&gt;

&lt;p&gt;But, sometimes, it is not possible to leave some other port opened for JMX and the only port available is HTTP(80 or 8080) or HTTPS(443 or 8443).&lt;/p&gt;

&lt;p&gt;Here the &lt;a href=&#34;http://www.jolokia.org&#34; title=&#34;Jolokia Project&#34; target=&#34;_blank&#34;&gt;Jolokia&lt;/a&gt; comes to rescue!
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Continuous Deployment, Versioning and Git</title>
      <link>https://konstantinpavlov.net/blog/2014/03/24/continuous-deployment-versioning-and-git/</link>
      <pubDate>Mon, 24 Mar 2014 12:30:35 +0200</pubDate>
      
      <guid>https://konstantinpavlov.net/blog/2014/03/24/continuous-deployment-versioning-and-git/</guid>
      <description>&lt;h2 id=&#34;releasing-with-git-and-maven&#34;&gt;Releasing with Git and Maven&lt;/h2&gt;

&lt;p&gt;A post about versioning in maven projects using git: &lt;a href=&#34;https://www.jayway.com/2012/04/07/continuous-deployment-versioning-and-git/&#34; target=&#34;_blank&#34;&gt;https://www.jayway.com/2012/04/07/continuous-deployment-versioning-and-git/&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;gitflow&#34;&gt;GitFlow&lt;/h2&gt;

&lt;p&gt;&lt;img src=&#34;../../assets/2014/03/git-model@2x.png&#34; alt=&#34;GitFlow Workflow&#34; /&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Establishing Customizable Tomcat Configuration</title>
      <link>https://konstantinpavlov.net/blog/2014/03/22/establishing-customizable-tomcat-configuration/</link>
      <pubDate>Sat, 22 Mar 2014 12:40:16 +0300</pubDate>
      
      <guid>https://konstantinpavlov.net/blog/2014/03/22/establishing-customizable-tomcat-configuration/</guid>
      <description>&lt;p&gt;Deploying to &lt;a href=&#34;http://tomcat.apache.org&#34; target=&#34;_blank&#34;&gt;Apache Tomcat&lt;/a&gt; often requires making changes to default configuration.
These changes are often environment specific.
Also, when upgrading a Tomcat to new version you need to be sure that all your custom changes have not been lost and were applied to new configuration.
To deal with all that stuff Tomcat via separation of the configuration.
This post contains step-by-step instruction will help you to establish custom tomcat configuration.
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Getting More Entropy in Java on Linux</title>
      <link>https://konstantinpavlov.net/blog/2014/03/21/getting-more-entropy-in-java-on-linux/</link>
      <pubDate>Fri, 21 Mar 2014 12:30:27 +0300</pubDate>
      
      <guid>https://konstantinpavlov.net/blog/2014/03/21/getting-more-entropy-in-java-on-linux/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://31.media.tumblr.com/4166367386765fe2b5f9845906898214/tumblr_inline_n2r2coHbTe1rx1usu.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Setting entropy pool for Java server on linux is fair simple. Just add a system property to specify a device to read from.
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Javascript Solari Board</title>
      <link>https://konstantinpavlov.net/blog/2013/12/21/javascript-solari-board/</link>
      <pubDate>Sat, 21 Dec 2013 22:07:59 +0200</pubDate>
      
      <guid>https://konstantinpavlov.net/blog/2013/12/21/javascript-solari-board/</guid>
      <description>Solari Board is a javascript app for displaying some status information. For example, it can be used to scheduling support team activity or displaying project build status from CI server (e.g. Jenkins)
This article with a video about how the guys from FogCreek software has integrated SolariBoard into BigBoard to monitor their support team activity.</description>
    </item>
    
    <item>
      <title>Migrating Logback Configuration from XML to Groovy</title>
      <link>https://konstantinpavlov.net/blog/2013/11/21/migrating-logback-configuration-from-xml-to-groovy/</link>
      <pubDate>Thu, 21 Nov 2013 15:44:14 +0300</pubDate>
      
      <guid>https://konstantinpavlov.net/blog/2013/11/21/migrating-logback-configuration-from-xml-to-groovy/</guid>
      <description>I&amp;rsquo;ve recently switched logback configuration of our application from XML to Groovy.
Configuration file is not about 5 times smaller and can be displayed on one screen!
Groovy helped to remove duplicating parts of configurations by using for loop.
The moving was easy thanks to online conversion tool. And don&amp;rsquo;t forget to add a groovy-all runtime dependency to your project config.</description>
    </item>
    
    <item>
      <title>Semantic Versioning Specification (SemVer)</title>
      <link>https://konstantinpavlov.net/blog/2013/01/19/semantic-versioning-specification-semver/</link>
      <pubDate>Sat, 19 Jan 2013 19:20:00 +0000</pubDate>
      
      <guid>https://konstantinpavlov.net/blog/2013/01/19/semantic-versioning-specification-semver/</guid>
      <description>For every new project, one of the first questions to answer when planning release system is &amp;laquo;How to define a product versions?&amp;raquo;. Now I know the default answer for this question: &amp;laquo;Just look at the Semantic Versioning Specification!.
It looks very natural: X.Y.Z where X is major version, Y is minor version and Z is the patch (hotfix) version of the product. X,Y,Z are non-negative numbers. See full specification for details, it is not big, just 12 points.</description>
    </item>
    
    <item>
      <title>Book: &#34;Continuous Delivery...&#34; by Jez Humble and David Farley</title>
      <link>https://konstantinpavlov.net/blog/2012/05/25/book-continuous-delivery...-by-jez-humble-and-david-farley/</link>
      <pubDate>Fri, 25 May 2012 09:29:00 +0400</pubDate>
      
      <guid>https://konstantinpavlov.net/blog/2012/05/25/book-continuous-delivery...-by-jez-humble-and-david-farley/</guid>
      <description>This book may help to make a product releasing and delivery to be more frequent and less painful.</description>
    </item>
    
  </channel>
</rss>